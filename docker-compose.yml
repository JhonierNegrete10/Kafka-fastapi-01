version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    networks:
      net_kafka:
        ipv4_address: 172.18.0.6

  kafka-1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-1
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: PLAINTEXT://kafka-1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_ADVERTISED_LISTENERS:  PLAINTEXT://kafka-1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    # healthcheck:
    #   test: ["CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181"]
    #   interval: 7s
    #   timeout: 30s
    #   retries: 5
    networks:
      net_kafka:
        ipv4_address: 172.18.0.8


  cmak:
    image: ghcr.io/eshepelyuk/dckr/cmak-3.0.0.5:latest
    restart: always
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: "zookeeper:2181"
    networks:
      net_kafka:
        ipv4_address: 172.18.0.7


  backend: 
    container_name: backend
    build:
      context: ./backend-users
      dockerfile: Dockerfile
    env_file:
    - ./backend-users/Docker.env
    ports:
      - "8000:8000"
    depends_on:
      - kafka-1
      - postgres_database
    volumes:
      - ./backend-users:/app
    environment:
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30

    networks:
      net_kafka:
        ipv4_address: 172.18.0.2  # Asigna una dirección IP específica a 'app'

  #! POSTGRESQL
  postgres_database: #! Hostname 
    container_name: db_postgres
    image: postgres:16
    restart: always
    ports:
      - '5432:5432'
    env_file:
      - ./backend-users/Docker.env
    volumes:
      - pgdata:/var/lib/postgresql/data
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -U postgres"]
    #   interval: 5s
    #   timeout: 5s
    #   retries: 5
    networks:
      net_kafka:
        ipv4_address: 172.18.0.3  # Asigna una dirección IP específica a 'database'

networks:
  net_kafka:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/16

volumes:
  pgdata:
    driver: local
